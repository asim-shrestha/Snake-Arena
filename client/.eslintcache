[{"/client/src/PlayErrorModal.js":"1","/client/src/gamepage/GamePage.js":"2","/client/src/gamepage/AddSnakeModal.js":"3","/client/src/AppModal.js":"4","/client/src/ShadedDiv.js":"5","/client/src/gamepage/Scores.js":"6","/client/src/gamepage/SnakeScore.js":"7","/client/src/gamepage/Grid.js":"8","/client/src/gamepage/Configuration.js":"9","/client/src/gamepage/Slider.js":"10","/client/src/index.js":"11","/client/src/TutorialModal.js":"12","/client/src/AppNavBar.js":"13","/client/src/gamepage/Tile.js":"14","/client/src/reportWebVitals.js":"15","/client/src/App.js":"16"},{"size":341,"mtime":1607289641094,"results":"17","hashOfConfig":"18"},{"size":3097,"mtime":1607309757702,"results":"19","hashOfConfig":"18"},{"size":4258,"mtime":1607305193366,"results":"20","hashOfConfig":"18"},{"size":832,"mtime":1607290905686,"results":"21","hashOfConfig":"18"},{"size":156,"mtime":1607292573117,"results":"22","hashOfConfig":"18"},{"size":1250,"mtime":1607307950435,"results":"23","hashOfConfig":"18"},{"size":1271,"mtime":1607311408712,"results":"24","hashOfConfig":"18"},{"size":2405,"mtime":1607311546687,"results":"25","hashOfConfig":"18"},{"size":1447,"mtime":1607301225741,"results":"26","hashOfConfig":"18"},{"size":821,"mtime":1607301185791,"results":"27","hashOfConfig":"18"},{"size":478,"mtime":1607286529020,"results":"28","hashOfConfig":"18"},{"size":1946,"mtime":1607304416480,"results":"29","hashOfConfig":"18"},{"size":587,"mtime":1605222704631,"results":"30","hashOfConfig":"18"},{"size":1486,"mtime":1607311909985,"results":"31","hashOfConfig":"18"},{"size":362,"mtime":1605161745376,"results":"32","hashOfConfig":"18"},{"size":692,"mtime":1607284802475,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"97v47c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/client/src/PlayErrorModal.js",[],["70","71"],"/client/src/gamepage/GamePage.js",[],"/client/src/gamepage/AddSnakeModal.js",["72","73"],"import React, { useState, useEffect } from 'react';\r\nimport AppModal from '../AppModal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst AddSnakeModal = ({ show, setShow, gameState, setGameState }) => {\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [type, setType] = useState(\"\");\r\n\tconst [foodW, setFoodW] = useState(\"\");\r\n\tconst [emptyW, setEmptyW] = useState(\"\");\r\n\tconst [avoidW, setAvoidW] = useState(\"\");\r\n\tconst [alertText, setAlertText] = useState(\"\");\r\n\tconst [addedSnakeName, setAddedSnakeName] = useState(\"\");\r\n\tconsole.log(`name: \"${name}\", \"${type}\"`);\r\n\r\n\tconst resetValues = () => {\r\n\t\tsetName(\"\");\r\n\t\tsetType(\"1\");\r\n\t\tsetAlertText(\"\");\r\n\t\tsetAddedSnakeName(\"\");\r\n\t\tsetFoodW(\"\");\r\n\t\tsetEmptyW(\"\");\r\n\t\tsetAvoidW(\"\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// Reset values whenever show changes\r\n\t\tresetValues();\r\n\t}, [show]);\r\n\r\n\tconst isSnakeNameAndTypeValid = () => {\r\n\t\tfor (let snake of gameState.snakes) {\r\n\t\t\t// Test if adding more than one player snake\r\n\t\t\tif (snake.id === \"player\" && type === \"player\") {\r\n\t\t\t\tsetAlertText(\"You cannot add more than 1 player controlled snake\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Test if adding snake with the same name\r\n\t\t\tif (snake.name === name) {\r\n\t\t\t\tsetAlertText(\"You cannot add two snakes with the same name\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Valid\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst isValidSnake = () => {\r\n\t\tif (gameState.snakes.length >= 4) {\r\n\t\t\tsetAlertText(\"You cannot add more than 4 snakes\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!isSnakeNameAndTypeValid()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\t// Place snake in corners\r\n\tconst getSnakePosition = () => {\r\n\t\tif (gameState.snakes.length === 0) { return { x: 3, y: 3 }; }\r\n\t\telse if (gameState.snakes.length === 1) { return { x: gameState.width - 4, y: 3 }; }\r\n\t\telse if (gameState.snakes.length === 2) { return { x: 3, y: gameState.height - 4 }; }\r\n\t\treturn { x: gameState.width - 4, y: gameState.height - 4 };\r\n\t};\r\n\r\n\tconst addSnakeToGameState = () => {\r\n\t\tconst newSnakes = [...gameState.snakes];\r\n\t\tnewSnakes.push({\r\n\t\t\tname: name,\r\n\t\t\tid: type,\r\n\t\t\thunger: 100,\r\n\t\t\tbody: [getSnakePosition(), getSnakePosition()],\r\n\t\t\tweights: foodW + ',' + emptyW + ',' + avoidW,\r\n\t\t});\r\n\r\n\t\tsetGameState({\r\n\t\t\t...gameState,\r\n\t\t\tsnakes: newSnakes,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddSnake = () => {\r\n\t\tsetAddedSnakeName(\"\");\r\n\t\tif (!name || name === \"\") {\r\n\t\t\tsetAlertText(\"Please add a name!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (type == \"3\") {\r\n\t\t\tif (!foodW || !emptyW || !avoidW) {\r\n\t\t\t\tsetAlertText(\"Please fill smart snake fields!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isValidSnake()) {\r\n\t\t\tconst snakeName = name;\r\n\t\t\taddSnakeToGameState();\r\n\t\t\tsetName(\"\")\r\n\t\t\tsetAlertText(\"\")\r\n\t\t\tsetAddedSnakeName(snakeName);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addButtonData = {\r\n\t\ttext: 'Add',\r\n\t\tonClick: handleAddSnake,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AppModal\r\n\t\t\tshow={show}\r\n\t\t\tsetShow={setShow}\r\n\t\t\ttitle=\"Add snake 🐍\"\r\n\t\t\tbuttonData={addButtonData}\r\n\t\t>\r\n\t\t\t<Form>\r\n\t\t\t\t{ addedSnakeName ? <Alert variant=\"success\">Snake \"{addedSnakeName}\" successfully added</Alert> : \"\" }\r\n\t\t\t\t{ alertText ? <Alert variant=\"warning\">{alertText}</Alert> : \"\" }\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Control type=\"text\" size=\"lg\" placeholder=\"Snake name\" value={name} onChange={e => setName(e.target.value)} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Form.Control as=\"select\" size=\"lg\" value={type} onChange={e => setType(e.target.value)}>\r\n\t\t\t\t\t\t<option value=\"1\">Random snake</option>\r\n\t\t\t\t\t\t<option value=\"2\">Hungry snake</option>\r\n\t\t\t\t\t\t<option value=\"3\">Smart snake</option>\r\n\t\t\t\t\t\t<option value=\"player\">Player controlled snake</option>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{\r\n\t\t\t\t\ttype == \"3\" ? \r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Form.Control type=\"number\" size=\"lg\" placeholder=\"Food weight\" value={foodW} onChange={e => setFoodW(e.target.value)} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Form.Control type=\"number\" size=\"lg\" placeholder=\"Empty space weight\" value={emptyW} onChange={e => setEmptyW(e.target.value)} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Form.Control type=\"number\" size=\"lg\" placeholder=\"Snake avoidance weight\" value={avoidW} onChange={e => setAvoidW(e.target.value)} />\r\n\t\t\t\t</Form.Group> : \"\"\r\n\t\t\t\t}\r\n\t\t\t</Form>\r\n\t\t</AppModal>\r\n\t);\r\n};\r\n\r\nexport default AddSnakeModal;\r\n",["74","75"],"/client/src/AppModal.js",[],"/client/src/ShadedDiv.js",[],["76","77"],"/client/src/gamepage/Scores.js",[],"/client/src/gamepage/SnakeScore.js",["78"],"/client/src/gamepage/Grid.js",[],"/client/src/gamepage/Configuration.js",[],"/client/src/gamepage/Slider.js",[],"/client/src/index.js",[],"/client/src/TutorialModal.js",[],"/client/src/AppNavBar.js",[],"/client/src/gamepage/Tile.js",[],"/client/src/reportWebVitals.js",[],"/client/src/App.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":94,"column":12,"nodeType":"85","messageId":"86","endLine":94,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":136,"column":11,"nodeType":"85","messageId":"86","endLine":136,"endColumn":13},{"ruleId":"79","replacedBy":"87"},{"ruleId":"81","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["95"],["96"],["95"],["96"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]